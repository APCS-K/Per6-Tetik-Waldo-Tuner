import beads.*;
import org.jaudiolibs.beads.*;
import java.util.Arrays;
import java.io.*;
import java.net.URL;
import javax.sound.sampled.*;
import java.io.File;

AudioContext ac;
Frequency f;
Glide fGlide;
WavePlayer wPlayer;
PowerSpectrum ps;
float averageFrequency = 400.0;
color fore = color(255, 255, 255);
color back = color(0,0,0);
void setup() {
size(600,600);
ac = new AudioContext();
Gain g = new Gain(ac, 2, .01);
ac.out.addInput(g);
UGen micIn = ac.getAudioInput();
fGlide = new Glide(ac, 50, 10);
wPlayer = new WavePlayer(ac, fGlide, Buffer.SINE);
g.addInput(wPlayer);
ShortFrameSegmenter sfs = new ShortFrameSegmenter(ac);
sfs.addInput(micIn);
FFT fft = new FFT();
sfs.addListener(fft);
ps = new PowerSpectrum();
fft.addListener(ps);
f = new Frequency(44100.0f);
ps.addListener(f);
ac.out.addDependent(sfs);
ac.start();
}

void draw()
{
  background(back);
  stroke(fore);
  if(ps == null) return;
  float[] features = ps.getFeatures();
  if(features != null) {
    //scan across the pixels
    for(int i = 0; i < width; i++) {
      int featureIndex = i * features.length / width;
      int vOffset = height - 1 - Math.min((int)(features[featureIndex] * height), height - 1);
      line(i,height,i,vOffset);
    }
  }
}
